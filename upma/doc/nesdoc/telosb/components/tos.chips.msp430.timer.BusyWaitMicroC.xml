<?xml version="1.0" ?><component loc="39:/usr/src/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc" nicename="tos.chips.msp430.timer.BusyWaitMicroC" qname="BusyWaitMicroC">
      <documentation loc="33:/usr/src/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>
 </short>
        <long>
 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="49:/usr/src/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
          <from><interface-ref name="BusyWait" ref="0x7f4787564440" scoped=""/></from>
          <to><interface-ref name="BusyWait" ref="0x7f478755f060" scoped=""/></to>
        </wire>
        <wire loc="50:/usr/src/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
          <from><interface-ref name="Counter" ref="0x7f4787551560" scoped=""/></from>
          <to><interface-ref name="Msp430CounterMicro" ref="0x7f478754eac0" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="41:/usr/src/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc" name="BusyWait" provided="1" ref="0x7f4787564440">
      <component-ref nicename="tos.chips.msp430.timer.BusyWaitMicroC" qname="BusyWaitMicroC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="BusyWait" ref="0x7f4787564440" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.BusyWait" qname="BusyWait"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f47883056b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4788305a20"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f4789391520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" ref="0x7f47875633d0" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="43:/usr/src/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc" name="Msp430CounterMicro" provided="1" ref="0x7f478754eac0">
      <component-ref nicename="tos.chips.msp430.timer.Msp430CounterMicroC" qname="Msp430CounterMicroC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Msp430CounterMicro" ref="0x7f478754eac0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f47883056b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4788305a20"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f4789391520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7f478754a970" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7f4787549340" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7f478754ae30" scoped=""/>
        <function-ref name="overflow" ref="0x7f4787549800" scoped=""/>
      </interface-functions>
    </interface><interface loc="53:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" name="BusyWait" provided="1" ref="0x7f478755f060">
      <component-ref nicename="tos.lib.timer.BusyWaitCounterC" qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="BusyWait" ref="0x7f478755f060" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.BusyWait" qname="BusyWait"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f47883056b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4788305a20"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f4789391520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" ref="0x7f478755fe70" scoped=""/>
      </interface-functions>
    </interface><interface loc="54:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" name="Counter" provided="0" ref="0x7f4787551560">
      <component-ref nicename="tos.lib.timer.BusyWaitCounterC" qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x7f4787551560" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f47883056b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4788305a20"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f4789391520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7f47875503d0" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7f4787550d50" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7f4787550890" scoped=""/>
        <function-ref name="overflow" ref="0x7f478754f260" scoped=""/>
      </interface-functions>
    </interface><component loc="41:/usr/src/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc" nicename="tos.chips.msp430.timer.Msp430CounterMicroC" qname="Msp430CounterMicroC">
      <documentation loc="33:/usr/src/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>
 Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>
 Msp430Counter32khC provides the standard 32khz counter for the MSP430.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="51:/usr/src/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
          <from><interface-ref name="Msp430CounterMicro" ref="0x7f478754eac0" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x7f4787547340" scoped=""/></to>
        </wire>
        <wire loc="52:/usr/src/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
          <from><interface-ref name="Msp430Timer" ref="0x7f4787544450" scoped=""/></from>
          <to><interface-ref name="TimerA" ref="0x7f478874b7b0" scoped=""/></to>
        </wire>
      </wiring>
    </component><component loc="51(BusyWaitMicroC.BusyWaitCounterC):/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" nicename="tos.lib.timer.BusyWaitCounterC" qname="BusyWaitMicroC.BusyWaitCounterC">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>
 BusyWaitCounterC uses a Counter to implement the BusyWait interface
 (block until a specified amount of time elapses).</short>
        <long>
 BusyWaitCounterC uses a Counter to implement the BusyWait interface
 (block until a specified amount of time elapses). See TEP102 for more
 details.

 &lt;p&gt;See TEP102 for more details.

 @param precision_tag A type indicating the precision of the BusyWait
   interface.
 @param size_type An integer type representing time values for the
   BusyWait interface.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
</long>
      </documentation>
      <instance number="0">
        <component-ref nicename="tos.lib.timer.BusyWaitCounterC" qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f47883056b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4788305a20"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7f4789391520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component></referenced></component>